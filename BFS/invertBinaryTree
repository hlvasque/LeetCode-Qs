/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 
 //LeetCode Q: 226. Invert Binary Tree

/*
DESCRIPTION: Given the root of a binary tree, invert the tree, and return its root.

*/
 
class Solution {
public:
    void invertDFS( TreeNode* root ){
        if( root == nullptr ) return; 
        TreeNode* leftM = root->left; 
        root->left = root->right; 
        root->right = leftM; 
        invertDFS( root->left ); 
        invertDFS( root->right ); 
    }
    TreeNode* invertTree(TreeNode* root) {
        invertDFS( root );
        return root; 
    }
};
