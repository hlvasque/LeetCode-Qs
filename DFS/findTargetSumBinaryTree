/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
 
 //LeetCode Q: 112. Path Sum

/*
DESCRIPTION: 
Given the root of a binary tree and an integer targetSum, 
return true if the tree has a root-to-leaf path such that adding up all the values along the path equals targetSum.

A leaf is a node with no children.

*/
 
class Solution {
public:
    bool checkDFS( TreeNode* root, int target ){
        if( root == nullptr ) return false; 
        if( root->val == target && root->left == nullptr && root->right == nullptr ) return true; 
        return checkDFS( root->left, target-root->val ) || checkDFS( root->right, target-root->val ); 
    }
    bool hasPathSum(TreeNode* root, int targetSum) {
        return checkDFS( root, targetSum ); 
    }
};
